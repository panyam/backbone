
type {{.HandlerName}} struct {
	service *{{.ServiceName}}
	RequestDecorator func(req *http.Request) (*http.Request, error)
}

// Request makers for each operation
{{ range $index, $field := .ServiceType.Fields }}
{{$field.Type.Signature}}
func (svc *{{$.HandlerName}}) Send{{$field.Name}}(req *CreateTeamRequest) (*CreateTeamResponse, error) {
	httpreq, err := SerializeCreateTeamRequest(req)
	if err != nil {
		return nil, err
	}
	if svc.RequestDecorator != nil {
		httpreq, err = svc.RequestDecorator(httpreq)
		if err != nil {
			return nil, err
		}
	}
	resp, err := SendHttpRequest(httpreq)
	if err != nil {
		return nil, err
	}
	return DeserializeCreateTeamResponse(resp, httpreq)
}
{{ end }}

